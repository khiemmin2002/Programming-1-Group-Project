import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

public class LoginGUI.LoginMain {
    private JFrame mainFrame;
    private JLabel headerLabel;
    private JLabel statusLabel;
    private JPanel controlPanel;
    private JLabel msglabel;

    public LoginGUI.LoginMain() {
        prepareGUI();
    }

    private void prepareGUI() {
        mainFrame = new JFrame();
        mainFrame.setSize(400, 300);
        mainFrame.setLayout(new GridLayout(3, 1));
        headerLabel = new JLabel("", JLabel.CENTER);
        statusLabel = new JLabel("", JLabel.CENTER);
        statusLabel.setSize(350, 100);
        controlPanel = new JPanel();
        controlPanel.setLayout(new FlowLayout());
        mainFrame.add(headerLabel);
        mainFrame.add(controlPanel);
        mainFrame.add(statusLabel);
        mainFrame.setVisible(true);
        mainFrame.setTitle("Ví dụ FlowLayout trong Java Swing");
        mainFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }

    private void showFlowLayoutDemo() {
        headerLabel.setText("Layout in action: FlowLayout");
        JPanel panel = new JPanel();
        panel.setBackground(Color.darkGray);
        panel.setSize(200, 200);
        FlowLayout layout = new FlowLayout();
        layout.setHgap(10);
        layout.setVgap(10);
        panel.setLayout(layout);
        panel.add(new JButton("OK"));
        panel.add(new JButton("Cancel"));
        controlPanel.add(panel);
        mainFrame.setVisible(true);
    }

    public static void main(String[] args) {
        LoginGUI.LoginMain demo = new LoginGUI.LoginMain();
        demo.showFlowLayoutDemo();
    }
}



Test.java
import java.awt.*;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

import static javax.swing.BorderFactory.createEmptyBorder;

public class Test extends JFrame {
    private JFrame frame;
    private JPanel controlPanel;
    private JPanel bottomPanel;
    private JPanel mainPanel;

    private JTextField username;
    private JTextField password;
    private JButton log_btn;
    private JButton repass_btn;
    private JButton reg_btn;

    private JLabel userlabel;
    private JLabel passlabel;
    private JLabel loginlabel;
    public Test() {
        setupGUI()
        ;    }
    private void setupGUI() {
        frame = new JFrame();
        ///ko dc quên tạo parameters/ args ở đây nếu ko sẽ ko dùng dc public giữa các methods
        frame.setSize(500, 500);
        frame.setLayout(new GridLayout(4,1));
        frame.setTitle("Login");
        ///lấy content pane là pane chính là frame còn mấy cái panel nằm trong
        //frame đó vẫn phải thêm code edit riêng
        frame.getContentPane().setBackground(new Color(-16));
        loginlabel = new JLabel("Login", JLabel.CENTER);
        loginlabel.setFont(new Font("Serif", Font.BOLD, 28));

        controlPanel = new JPanel();
        username = new JTextField();
        password = new JTextField();
        userlabel = new JLabel("Username", JLabel.CENTER);
        userlabel.setFont(new Font("Didot", Font.PLAIN, 14));
        passlabel = new JLabel("Password", JLabel.CENTER);
        passlabel.setFont(new Font("Didot", Font.PLAIN, 14));
        mainPanel = new JPanel();
        log_btn = new JButton("Sign in");
        log_btn.setFont(new Font("Didot", Font.BOLD, 15));
//        log_btn.setBorder(BorderFactory.createEmptyBorder(5,10,5,10));
//        log_btn.setBorderPainted(true);
        log_btn.setMargin(new Insets(10, 10, 10, 10));
        ///Phải tạo trc r ms ms dc apply mấy cái edit vào method
        //frame phải add theo thứ tự
        //loginlabel xong controlPanel trc xong log_btn thì cái frame sẽ display theo thứ tự
        bottomPanel = new JPanel();
        repass_btn = new JButton("Forgot password?");
        repass_btn.setFont(new Font("Didot", Font.PLAIN, 14));
        repass_btn.setMargin(new Insets(10, 10, 10, 10));
        reg_btn = new JButton("Register");
        reg_btn.setFont(new Font("Didot", Font.PLAIN, 14));
        reg_btn.setMargin(new Insets(10, 10, 10, 10));
        frame.add(loginlabel);
        frame.add(controlPanel);
        frame.add(mainPanel);
        frame.add(bottomPanel);
        frame.setVisible(true);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    private void showGridLayout() {
        controlPanel.setBackground(new Color(-16));
        controlPanel.setSize(400, 400);
        controlPanel.setForeground(new Color(-16777216));
        controlPanel.setLayout(new GridLayout(2,2,10,10));
        Border padding = createEmptyBorder(0, 40, 0, 40);
        controlPanel.setBorder(padding);
        userlabel.setBackground(new Color(-16777216));
        userlabel.setForeground(new Color(-16777216));
        username.setBackground(new Color(16777215));
        username.setForeground(new Color(16777215));

        passlabel.setBackground(new Color(-16777216));
        passlabel.setForeground(new Color(-16777216));
        password.setBackground(new Color(16777215));
        password.setForeground(new Color(16777215));
        loginlabel.setForeground(new Color(-16777216));
        controlPanel.add(userlabel);
        controlPanel.add(username);
        controlPanel.add(passlabel);
        controlPanel.add(password);

        mainPanel.setBackground(new Color(-16));
        mainPanel.setForeground(new Color(-16));
        log_btn.setBackground(new Color(-16));
        log_btn.setForeground(new Color(-16777216));
        mainPanel.add(log_btn);
        Border padd = BorderFactory.createEmptyBorder(20, 0, 0, 0);
        mainPanel.setVisible(true);
        mainPanel.setBorder(padd);

        bottomPanel.setBackground(new Color(-16));
        bottomPanel.setForeground(new Color(-16777216));
        bottomPanel.setLayout(new FlowLayout(FlowLayout.CENTER,0,0));
//        Border padds = BorderFactory.createEmptyBorder(0, 10, 30, 10);
//        bottomPanel.setBorder(padds);
        reg_btn.setBackground(new Color(-16));
        reg_btn.setForeground(new Color(-16777216));
        repass_btn.setBackground(new Color(-16));
        repass_btn.setForeground(new Color(-16777216));
        reg_btn.setBorderPainted(false);
        repass_btn.setBorderPainted(false);
        bottomPanel.add(repass_btn);
        bottomPanel.add(reg_btn);
//        form1.add(username);
//        form1.add(password);
        ///form1.setVisible hình như vân ko display phải dùng 1 panel khác
        // làm trung gian giữa jframe frame và panel form1
        frame.setVisible(true);
    }
    public static void main(String args[]) {
        Test f = new Test();
        //nên tạo 1 constructor để tạo layout cơ bản trc
        //sau đó mấy cái màu mè tô điểm margin thì tạo methods
        f.showGridLayout();
    }

}

loginmain
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.WindowConstants;

public class LoginGUI.LoginMain {
    private JFrame mainFrame;
    private JLabel headerLabel;
    private JLabel statusLabel;
    private JPanel controlPanel;
    private JLabel msglabel;

    public LoginGUI.LoginMain() {
        prepareGUI();
    }

    private void prepareGUI() {
        mainFrame = new JFrame();
        mainFrame.setSize(400, 300);
        mainFrame.setLayout(new GridLayout(3, 1));
        headerLabel = new JLabel("", JLabel.CENTER);
        statusLabel = new JLabel("", JLabel.CENTER);
        statusLabel.setSize(350, 100);
        controlPanel = new JPanel();
        controlPanel.setLayout(new FlowLayout());
        mainFrame.add(headerLabel);
        mainFrame.add(controlPanel);
        mainFrame.add(statusLabel);
        mainFrame.setVisible(true);
        mainFrame.setTitle("Ví dụ FlowLayout trong Java Swing");
        mainFrame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
    }

    private void showFlowLayoutDemo() {
        headerLabel.setText("Layout in action: FlowLayout");
        JPanel panel = new JPanel();
        panel.setBackground(Color.darkGray);
        panel.setSize(200, 200);
        FlowLayout layout = new FlowLayout();
        layout.setHgap(10);
        layout.setVgap(10);
        panel.setLayout(layout);
        panel.add(new JButton("OK"));
        panel.add(new JButton("Cancel"));
        controlPanel.add(panel);
        mainFrame.setVisible(true);
    }

    public static void main(String[] args) {
        LoginGUI.LoginMain demo = new LoginGUI.LoginMain();
        demo.showFlowLayoutDemo();
    }
}

///jdbc connection to db
import java.awt.event.ActionEvent;
import java.awt.*;
import java.sql.Connection;
import java.sql.*;
import javax.swing.*;

public class RegisterGUI.RegisterPage {
    public static void main (String[] args) {
        String url = "jdbc:mysql://127.0.0.1:3306/?user=root";
        String dbName = "demo" ;
        String driver = "com.mysql.jdbc.Driver";
        String userName = "root";
        String password = "0925747216aefgH@";
        try {
//            Class.forName(driver);
            Connection conn = DriverManager.getConnection(url,userName,password);
            conn.close();
            System.out.println("Successfully connected");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

pas vavl
 /*
        CHECKING PASSWORD RULES

        It contains at least 8 characters and at most 20 characters. .{8,20}
        It contains at least one digit. (?=.*\d)
        It contains at least one upper case alphabet. (?=.*[A-Z])
        It contains at least one lower case alphabet. (?=.*[a-z])
        It contains at least one special character which includes !@#$%&*()-+=^. (?=.*[^a-zA-Z\d])
        It doesn’t contain any white space. (?=\S+$)

        Ex: Pass@word29
        */

        /*if (passwordInput.matches("^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z\\d])(?=\\S+$).{8,20}$")) {
            return validStatus;
        }*/

        // Prompting users if the password's length is less than 8 or more than 20 characters
        if (password.length() < 8 || password.length() > 20) {
            System.out.println("The password must be longer than 8 characters and not exceed 20 characters.");
            return;
        }

        // Prompting users if the password does not contain at least 1 digit
        if (!password.matches("(.*\\d.*)")) {
            System.out.println("The password must contain at least 1 digit.");
            return;
        }

        // Prompting users if the password does not contain a lowercase character
        if (!password.matches("(.*[a-z].*)")) {
            System.out.println("The password must contain at least a lowercase character.");
            return;
        }

        // Prompting users if the password does not contain a lowercase character
        if (!password.matches("(.*[A-Z]).*")) {
            System.out.println("The password must contain at least an uppercase character.");
            return;
        }

        // Prompting users if the password does not contain a special character
        if (!password.matches("(.*[^a-zA-Z\\d].*)")) {
            System.out.println("The password must contain at least a special character.");
            return;
        }

        // Prompting users if the password contains a whitespace character
        if (!password.matches("(\\S+$)")) {
            System.out.println("The password do not contain any whitespace character.");
            return;
        }
        if (!password.equals(passwordConfirm)) {
            System.out.println("Confirm Password does not match");
            return;
        }
        if (phone.matches("^\\d+$")) { // Kiểm tra sdt chỉ bao gồm số
            String phoneFormat = phone.replaceFirst("(\\d{3})(\\d{3})(\\d+)", "$1-$2-$3");
            System.out.println(phoneFormat);
        } else {
            // Nhắc ng dùng chỉ nhập số, ko có chữ
            System.out.println("You can't enter non-digit value");
            return;
        }
